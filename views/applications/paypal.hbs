<!-- Body -->
<body onload = 'showModal()'>
<div class="container">
    {{!-- <div id="modal1" class="modal"> --}}
        <div class="modal-content animate">
            <div class="container">
            <!-- Paypal API -->
            <div id="smart-button-container">
              <div style="text-align: center;">
                <div style="margin-bottom: 1.25rem;">
                  <p>Please choose the respective University's application fee</p>
                  <select id="item-options"><option value="NUS" price="10">NUS - 10 SGD</option><option value="NTU" price="21.40">NTU - 21.40 SGD</option><option value="SMU" price="15">SMU - 15 SGD</option><option value="SUSS" price="15">SUSS - 15 SGD</option><option value="SIT" price="18">SIT - 18 SGD</option></select>
                  <select style="visibility: hidden" id="quantitySelect"></select>
                </div>
              <div id="paypal-button-container"></div>
              </div>
            </div>
            <script src="https://www.paypal.com/sdk/js?client-id=sb&currency=SGD" data-sdk-integration-source="button-factory"></script>
            <script>
              function initPayPalButton() {
                var shipping = 0;
                var itemOptions = document.querySelector("#smart-button-container #item-options");
            var quantity = parseInt();
            var quantitySelect = document.querySelector("#smart-button-container #quantitySelect");
            if (!isNaN(quantity)) {
              quantitySelect.style.visibility = "visible";
            }
            var orderDescription = "Please choose the respective University's application fee";
            if(orderDescription === '') {
              orderDescription = 'Item';
            }
            paypal.Buttons({
              style: {
                shape: 'pill',
                color: 'gold',
                layout: 'vertical',
                label: 'paypal',
                
              },
              createOrder: function(data, actions) {
                var selectedItemDescription = itemOptions.options[itemOptions.selectedIndex].value;
                var selectedItemPrice = parseFloat(itemOptions.options[itemOptions.selectedIndex].getAttribute("price"));
                var tax = (0 === 0) ? 0 : (selectedItemPrice * (parseFloat(0)/100));
                if(quantitySelect.options.length > 0) {
                  quantity = parseInt(quantitySelect.options[quantitySelect.selectedIndex].value);
                } else {
                  quantity = 1;
                }
        
                tax *= quantity;
                tax = Math.round(tax * 100) / 100;
                var priceTotal = quantity * selectedItemPrice + parseFloat(shipping) + tax;
                priceTotal = Math.round(priceTotal * 100) / 100;
                var itemTotalValue = Math.round((selectedItemPrice * quantity) * 100) / 100;
        
                return actions.order.create({
                  purchase_units: [{
                    description: orderDescription,
                    amount: {
                      currency_code: 'SGD',
                      value: priceTotal,
                      breakdown: {
                        item_total: {
                          currency_code: 'SGD',
                          value: itemTotalValue,
                        },
                        shipping: {
                          currency_code: 'SGD',
                          value: shipping,
                        },
                        tax_total: {
                          currency_code: 'SGD',
                          value: tax,
                        }
                      }
                    },
                    items: [{
                      name: selectedItemDescription,
                      unit_amount: {
                        currency_code: 'SGD',
                        value: selectedItemPrice,
                      },
                      quantity: quantity
                    }]
                  }]
                });
              },
              onApprove: function(data, actions) {
                return actions.order.capture().then(function(details) {
                  alert('Transaction completed by ' + details.payer.name.given_name + '!');
                });
              },
              onError: function(err) {
                console.log(err);
              },
            }).render('#paypal-button-container');
          }
          initPayPalButton();
          </script>
          <button class="btn btn-secondary" type="submit" onclick="paymentback()">Back to Payment Page</button>
          </div>
        </div>
    </div>
</div>

<div class="container">
    <div id="modal2" class="modal">
        <div class="modal-content animate">

        <div class="container">
        
            <label for="uname"><b>Payment successfully made!</b></label>
            <p class="cd-signin-modal__message">Check your email inbox for email confirmation.</p>
            
            <button type="submit" onclick="back()">Back to User Page</button>
    
        </div>
        </div>
    </div>
</div>